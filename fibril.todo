 ✔ Guard becomes event driven - no polling @done (16-02-18 09:28)
 ✔ Fibrils return single count guards @done (16-02-18 09:28)
 ✔ Can await one or more guards @done (16-02-18 09:28)
 ✔ Use semaphore type object for synchronising multiple async calls @done (16-02-18 19:03)
 ✔ Use counter to determine if any work left to do, if not auto-stop @done (16-02-18 19:03)
 ✔ Create event loop import @done (16-02-18 21:15)
 ✔ Create continous and counting loop construct @done (16-02-18 21:15)
 ✔ Create async object @done (16-02-19 07:35)
 ✔ Create promises @done (16-02-19 07:49)
 ✔ Turn into gem @done (16-02-19 07:49)
 ✔ Create Fibril proxy @done (16-02-19 19:18)
 ✔ Provide optional timeout value to Fibril looping @done (16-02-23 08:58)
 ✔ Create smarter loop importer. Finds import statement and only evals everything past itself @done (16-02-23 09:01)
 ✔ Add fasync and fpromise @done (16-02-27 11:19)
 ☐ Add keywords syntax highlighting in Sublime
    - promise, async, fibril, await, await_all


 ☐ Write performance tests
 ☐ Use efficient ring buffer as queue and block when full

 ☐ Examples:

   ☐ Fibril with tick
   ☐ Fibril with async IO
   ☐ Fibril external await
   ☐ Fibril with internal await
   ☐ Fibril wrapping redis
   ☐ Promises

   ☐ Disk read + write
   ☐ Database queries using AR
   ☐ Network IO
   ☐ Asyncifying common functions
   ☐ Asyncifying class methods
   ☐ Asyncifying instance methods
   ☐ Asyncifying module methods
   ☐ Comparison to thread
   ☐ Comparison to event machine

 ☐ Rename to Weave
 ☐ Refactor